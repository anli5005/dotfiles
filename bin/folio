#! /usr/bin/python3
#  Vibe coded by ChatGPT, even the name

#!/usr/bin/env python3

import argparse
import json
import re
import subprocess
import sys


def ensure_finderinfo(folder: str):
    """
    Ensure the com.apple.FinderInfo extended attribute exists.
    If it does not, create it as an empty string.
    """
    try:
        subprocess.run(
            ["xattr", "-p", "com.apple.FinderInfo", folder],
            check=True,
            capture_output=True,
        )
        # Attribute exists, do nothing
    except subprocess.CalledProcessError:
        # Attribute missing, create as empty
        try:
            subprocess.run(
                ["xattr", "-w", "-x", "com.apple.FinderInfo", ("0" * 16) + "04" + ("0" * 46), folder],
                check=True,
            )
            print(f"‚ÑπÔ∏è Initialized empty com.apple.FinderInfo for '{folder}'")
        except subprocess.CalledProcessError as e:
            print(f"‚ö†Ô∏è Failed to initialize com.apple.FinderInfo: {e}", file=sys.stderr)


def set_folder_icon(folder: str, descriptor: str, is_symbol: bool = None, is_emoji: bool = None):
    """
    Sets the folder icon using extended attributes.
    If is_symbol or is_emoji are not specified, auto-detect based on regex.
    """
    if is_symbol:
        icon_data = {"sym": descriptor}
    elif is_emoji:
        icon_data = {"emoji": descriptor}
    else:
        # Auto-detect with regex
        if re.fullmatch(r"[a-z0-9_\.]+", descriptor):
            icon_data = {"sym": descriptor}
        else:
            icon_data = {"emoji": descriptor}

    json_str = json.dumps(icon_data)

    try:
        subprocess.run(
            ["xattr", "-w", "com.apple.icon.folder#S", json_str, folder],
            check=True
        )
        ensure_finderinfo(folder)
        print(f"‚úÖ Successfully set icon for '{folder}' to {json_str}")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Failed to set icon: {e}", file=sys.stderr)
        sys.exit(1)


def remove_folder_icon(folder: str):
    """
    Removes the folder icon by deleting the extended attribute.
    """
    try:
        subprocess.run(
            ["xattr", "-d", "com.apple.icon.folder#S", folder],
            check=True
        )
        print(f"üóëÔ∏è Removed custom icon from '{folder}'")
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è Failed to remove icon (maybe none set?): {e}", file=sys.stderr)
        sys.exit(1)


def main():
    parser = argparse.ArgumentParser(
        description="Customize the appearance of a macOS Tahoe folder with a symbol or emoji icon."
    )
    parser.add_argument("folder", help="Path to the folder to customize")
    parser.add_argument("descriptor", nargs="?", help="Icon descriptor (symbol name or emoji)")

    group = parser.add_mutually_exclusive_group()
    group.add_argument("--symbol", action="store_true", help="Treat descriptor as a symbol name")
    group.add_argument("--emoji", action="store_true", help="Treat descriptor as an emoji")
    group.add_argument("--remove", action="store_true", help="Remove/reset the custom folder icon")

    args = parser.parse_args()

    if args.remove:
        remove_folder_icon(args.folder)
    else:
        if not args.descriptor:
            print("‚ùå Descriptor required unless --remove is specified.", file=sys.stderr)
            sys.exit(1)
        set_folder_icon(args.folder, args.descriptor, args.symbol, args.emoji)


if __name__ == "__main__":
    main()

